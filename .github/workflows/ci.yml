name: CI

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: stack
        uses: freckle/stack-action@v5

      # https://github.com/ocharles/weeder/issues/190
      # - uses: freckle/weeder-action@v2
      #   with:
      #     ghc-version: ${{ steps.stack.outputs.compiler-version }}

      - uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.stack.outputs.local-install-root }}/bin/ghctl
          name: binaries
          if-no-files-found: error

  test-plan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Install ghctl
        run: |
          chmod +x ghctl
          sudo mv -v ghctl /usr/local/bin

      - uses: actions/checkout@v4
        with:
          sparse-checkout: .ghctl

      - id: token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.AUTOMATION_APP_ID }}
          private-key: ${{ secrets.AUTOMATION_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Assert no differences in ghctl
        run: ghctl plan --fail-on-diff
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
          LOG_COLOR: always

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/hlint-setup@v2
      - uses: haskell-actions/hlint-run@v2
        with:
          fail-on: warning

  pages:
    if: ${{ github.ref_name == 'main' }}
    needs: test

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: read
      pages: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Install ghctl
        run: |
          chmod +x ghctl
          sudo mv -v ghctl /usr/local/bin

      - uses: actions/checkout@v4
        with:
          sparse-checkout: docs

      - name: Generate Ronn man-pages to docs/
        run: ghctl docs
        env:
          GITHUB_TOKEN: unused

      - name: Setup ronn-ng
        run: |
          gem install --user ronn-ng
          for bin in "$HOME"/.local/share/gem/ruby/*/bin; do
            echo "$bin"
          done >>"$GITHUB_PATH"

      - name: Generate HTML man-pages in docs/
        run: ronn --style toc,code --html docs/*.ronn
        env:
          RONN_STYLE: docs

      - name: Copy HTML sources to _site
        run: |
          mkdir -p _site
          cp -v docs/*.html _site/
          cp -v _site/ghctl.1.html _site/index.html

      - name: Add repositories schema
        run: ghctl schema > _site/repository.schema.json
        env:
          GITHUB_TOKEN: unused

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: _site
      - id: deployment
        uses: actions/deploy-pages@v4
